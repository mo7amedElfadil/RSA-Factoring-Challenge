#!/usr/bin/python3
import random
from math import isqrt as sq
import sys

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    x = random.randint(2, n - 2)
    y = x
    d = 1

    while d == 1:
        x = (x * x + 1) % n
        y = (y * y + 1) % n
        y = (y * y + 1) % n
        d = gcd(abs(x - y), n)

    if (d == n):
        return pollards_rho(d)
    return d

def factorize_semiprime(semiprime):
    factor1 = pollards_rho(semiprime)
    if not factor1:
        return None
    factor2 = semiprime // factor1
    return factor1, factor2

def check_file():
    if len(sys.argv) != 2:
        print("factors <file>")
        exit()

def read_file_all(f_name):
    try:
        with open(f_name, "r") as fp:
            file = fp.read()
        file_content = sorted(list(map(int, file.splitlines())))
        for semiprime in file_content:
            try:
                prime_factors = sorted(list(factorize_semiprime(semiprime)))
                if len(prime_factors) == 2:
                    print("{:d}={:d}*{:d}".format(semiprime, prime_factors[1], prime_factors[0]))
            except Exception as e:
                print(f"Error processing line: {e}")
    except Exception as e:
        print(e)


def do_it():
    f_name = sys.argv[1]
    read_file_all(f_name)


check_file()
do_it()
